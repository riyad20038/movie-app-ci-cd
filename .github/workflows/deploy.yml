name: Deploy Workflow
on:
  workflow_run:
    workflows:
      - Unit Tests
    types:
      - completed

env:
  PRIVATE_KEY: ${{ secrets.RSA_KEY_FOR_APP_EC2 }}
  INSTANCE_IP: ${{ vars.INSTANCE_IP }}

jobs:
  push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: ./python-fast-app
          file: ./python-fast-app/Dockerfile
          push: true
          tags: riyad2003/python-fast-app:v1

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Upload docker-compose.yml to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.INSTANCE_IP }}
          username: ec2-user
          key: ${{ env.PRIVATE_KEY }}
          source: "python-fast-app/docker-compose.yml"  # Send the latest docker-compose.yml
          target: "/home/ec2-user/python-fast-app/"  # Destination on EC2

      - name: Upload other necessary files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.INSTANCE_IP }}
          username: ec2-user
          key: ${{ env.PRIVATE_KEY }}
          source: "./python-fast-app*"  # Send all necessary files (like main.py, requirements.txt, etc.)
          target: "/home/ec2-user/python-fast-app/"  # Destination on EC2

      - name: SSH into EC2 and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.INSTANCE_IP }}
          username: ec2-user
          key: ${{ env.PRIVATE_KEY }}
          script: |
            cd /home/ec2-user/python-fast-app
            sudo docker-compose down || true  # Stop running containers
            sudo docker-compose pull  # Pull latest images from Docker Hub
            sudo docker-compose up -d  # Start services
            sudo docker image prune -f  # Clean up old images